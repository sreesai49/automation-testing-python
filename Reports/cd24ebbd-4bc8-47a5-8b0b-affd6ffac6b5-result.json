{"name": "Home page - Arrivals-Add to Basket-Items-Coupon", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <tests.automationtesting_tests.test_homepage.TestHomePage object at 0x107370a10>\n\n    @allure.title(\"Home page - Arrivals-Add to Basket-Items-Coupon\")\n    @allure.description(\"1) Open the browser\\n\" +\n                        \"2) Enter the URL “http://practice.automationtesting.in/”\\n\" +\n                        \"3) Click on Shop Menu\\n\" +\n                        \"4) Now click on Home menu button\\n\" +\n                        \"5) Test whether the Home page has Three Arrivals only\\n\" +\n                        \"6) The Home page must contains only three Arrivals\\n\" +\n                        \"7) Now click the image in the Arrivals\\n\" +\n                        \"8) Test whether it is navigating to next page where the user can add that book into his basket.\\n\" +\n                        \"9) Image should be clickable and should navigate to next page where user can add that book to his basket\\n\" +\n                        \"10) Click on the Add To Basket button which adds that book to your basket\\n\" +\n                        \"11) User can view that Book in the Menu item with price.\\n\" +\n                        \"12) Now click on Item link which navigates to proceed to check out page.\\n\" +\n                        \"13) User can click on the Item link in menu item after adding the book in to the basket which leads to the check out page\\n\"+\n                        \"14) Enter the Coupon code as ‘krishnasakinala’ to get 50rps off on the total.\\n\"+\n                        \"15) User can able to apply coupon by entering ‘krishnasakinala’ in the coupon textbox which give 50rps off on the total price\")\n    def test9_homepage_arrivals_add_to_basket_items_coupon(self):\n        homepage = HomePage(self.driver)\n        productpage = ProductPage(self.driver)\n        basketpage = BasketPage(self.driver)\n        homepage.open()\n        homepage.click_on_shop_menu()\n        homepage.click_on_home_menu_button()\n        homepage.scroll_to_arrivals_images()\n        arrivals_count = homepage.get_arrivals_count()\n        assert (arrivals_count, 3)\n    \n        basket_price = productpage.get_basket_price()\n        homepage.open_selenium_ruby_arrival_add_to_basket()\n        assert (basket_price + productpage.get_product_price(), productpage.get_basket_price())\n        product_name = productpage.get_product_name()\n        productpage.click_basket_price()\n        basket_items = basketpage.get_basket_items()\n        assert product_name in basket_items, True\n        homepage.click_site_logo()\n        homepage.scroll_to_arrivals_images()\n    \n        basket_price = productpage.get_basket_price()\n        homepage.open_html_arrival_add_to_basket()\n        assert (basket_price + productpage.get_product_price(), productpage.get_basket_price())\n        product_name = productpage.get_product_name()\n        productpage.click_basket_price()\n        basket_items = basketpage.get_basket_items()\n        assert product_name in basket_items, True\n        homepage.click_site_logo()\n        homepage.scroll_to_arrivals_images()\n    \n        basket_price = productpage.get_basket_price()\n        homepage.open_javascript_arrival_add_to_basket()\n        assert (basket_price + productpage.get_product_price(), productpage.get_basket_price())\n        product_name = productpage.get_product_name()\n        productpage.click_basket_price()\n        basket_items = basketpage.get_basket_items()\n        assert product_name in basket_items, True\n        productpage.click_basket_price()\n        basketpage.verify_items_in_basket_page()\n        basketpage.enter_coupon_code(\"krishnasakinala\")\n        basketpage.click_apply_coupon_button()\n>       basketpage.validate_applied_coupon(\"krishnasakinala\", \"₹50.00\")\n\ntests/automationtesting_tests/test_homepage.py:418: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/at_pages/basket_page.py:72: in validate_applied_coupon\n    driver_helper.wait_till_element_visible(*BasketPageLocators.applied_coupon_title)\nutils/driver_helper.py:15: in wait_till_element_visible\n    until(EC.visibility_of_element_located((locator_type, locator_strategy)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"421765669871b3fb50acbe0375fd5b62\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x107370cd0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "description": "1) Open the browser\n2) Enter the URL “http://practice.automationtesting.in/”\n3) Click on Shop Menu\n4) Now click on Home menu button\n5) Test whether the Home page has Three Arrivals only\n6) The Home page must contains only three Arrivals\n7) Now click the image in the Arrivals\n8) Test whether it is navigating to next page where the user can add that book into his basket.\n9) Image should be clickable and should navigate to next page where user can add that book to his basket\n10) Click on the Add To Basket button which adds that book to your basket\n11) User can view that Book in the Menu item with price.\n12) Now click on Item link which navigates to proceed to check out page.\n13) User can click on the Item link in menu item after adding the book in to the basket which leads to the check out page\n14) Enter the Coupon code as ‘krishnasakinala’ to get 50rps off on the total.\n15) User can able to apply coupon by entering ‘krishnasakinala’ in the coupon textbox which give 50rps off on the total price", "steps": [{"name": "Enter the URL “http://practice.automationtesting.in/”", "status": "passed", "start": 1642584659306, "stop": 1642584672759}, {"name": "Click on Shop Menu", "status": "passed", "start": 1642584672759, "stop": 1642584677860}, {"name": "Now click on Home menu button", "status": "passed", "start": 1642584677860, "stop": 1642584678736}, {"name": "Scroll to arrivals images", "status": "passed", "start": 1642584678736, "stop": 1642584678787}, {"name": "Get new arrivals count from home screen", "status": "passed", "start": 1642584678787, "stop": 1642584678805}, {"name": "Get basket price", "status": "passed", "start": 1642584678805, "stop": 1642584678824}, {"name": "Open Selenium ryby book and add to basket", "status": "passed", "steps": [{"name": "Click add to basket button", "status": "passed", "start": 1642584680204, "stop": 1642584681298}, {"name": "Get success message", "status": "passed", "start": 1642584681298, "stop": 1642584681332}], "start": 1642584678824, "stop": 1642584681347}, {"name": "Get product price", "status": "passed", "start": 1642584681347, "stop": 1642584681364}, {"name": "Get basket price", "status": "passed", "start": 1642584681365, "stop": 1642584681385}, {"name": "Get product name from product page", "status": "passed", "start": 1642584681385, "stop": 1642584681395}, {"name": "Click on basket price menu", "status": "passed", "start": 1642584681395, "stop": 1642584683181}, {"name": "Get basket items list", "status": "passed", "start": 1642584683181, "stop": 1642584683200}, {"name": "Click on site logo", "status": "passed", "start": 1642584683200, "stop": 1642584684127}, {"name": "Scroll to arrivals images", "status": "passed", "start": 1642584684127, "stop": 1642584684178}, {"name": "Get basket price", "status": "passed", "start": 1642584684178, "stop": 1642584684194}, {"name": "Open html book and add to basket", "status": "passed", "steps": [{"name": "Click add to basket button", "status": "passed", "start": 1642584685206, "stop": 1642584686034}, {"name": "Get success message", "status": "passed", "start": 1642584686034, "stop": 1642584686064}], "start": 1642584684194, "stop": 1642584686077}, {"name": "Get product price", "status": "passed", "start": 1642584686078, "stop": 1642584686096}, {"name": "Get basket price", "status": "passed", "start": 1642584686096, "stop": 1642584686112}, {"name": "Get product name from product page", "status": "passed", "start": 1642584686112, "stop": 1642584686123}, {"name": "Click on basket price menu", "status": "passed", "start": 1642584686123, "stop": 1642584687496}, {"name": "Get basket items list", "status": "passed", "start": 1642584687496, "stop": 1642584687528}, {"name": "Click on site logo", "status": "passed", "start": 1642584687528, "stop": 1642584688438}, {"name": "Scroll to arrivals images", "status": "passed", "start": 1642584688438, "stop": 1642584688514}, {"name": "Get basket price", "status": "passed", "start": 1642584688514, "stop": 1642584688535}, {"name": "Open javascript book and add to basket", "status": "passed", "steps": [{"name": "Click add to basket button", "status": "passed", "start": 1642584689330, "stop": 1642584690123}, {"name": "Get success message", "status": "passed", "start": 1642584690123, "stop": 1642584690151}], "start": 1642584688535, "stop": 1642584690165}, {"name": "Get product price", "status": "passed", "start": 1642584690165, "stop": 1642584690182}, {"name": "Get basket price", "status": "passed", "start": 1642584690182, "stop": 1642584690196}, {"name": "Get product name from product page", "status": "passed", "start": 1642584690196, "stop": 1642584690206}, {"name": "Click on basket price menu", "status": "passed", "start": 1642584690206, "stop": 1642584691616}, {"name": "Get basket items list", "status": "passed", "start": 1642584691616, "stop": 1642584691658}, {"name": "Click on basket price menu", "status": "passed", "start": 1642584691658, "stop": 1642584692659}, {"name": "Verify all three books added to basket items list", "status": "passed", "start": 1642584692659, "stop": 1642584692665}, {"name": "Enter coupon code in field", "status": "passed", "parameters": [{"name": "coupon_code", "value": "'krishnasakinala'"}], "start": 1642584692665, "stop": 1642584692820}, {"name": "Click Apply coupon button", "status": "passed", "start": 1642584692820, "stop": 1642584692906}, {"name": "validate applied coupon text", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/sreesairanganadh/Downloads/automation-testing/venv/lib/python3.7/site-packages/allure_commons/_allure.py\", line 157, in impl\n    return func(*a, **kw)\n  File \"/Users/sreesairanganadh/Downloads/automation-testing/pages/at_pages/basket_page.py\", line 72, in validate_applied_coupon\n    driver_helper.wait_till_element_visible(*BasketPageLocators.applied_coupon_title)\n  File \"/Users/sreesairanganadh/Downloads/automation-testing/utils/driver_helper.py\", line 15, in wait_till_element_visible\n    until(EC.visibility_of_element_located((locator_type, locator_strategy)))\n  File \"/Users/sreesairanganadh/Downloads/automation-testing/venv/lib/python3.7/site-packages/selenium/webdriver/support/wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "coupon_code", "value": "'krishnasakinala'"}, {"name": "discount_value", "value": "'₹50.00'"}], "start": 1642584692906, "stop": 1642584744117}], "attachments": [{"name": "log", "source": "e0616607-d6a5-45ed-bf12-1a67a1f4e5c6-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "3210f81f-d3c0-4fed-a996-0fae6e59d493-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "74cb11ea-bec6-48a6-a35c-47bf105087ad-attachment.txt", "type": "text/plain"}], "start": 1642584659305, "stop": 1642584744124, "uuid": "71593898-0396-4ec4-9853-5bba3925476d", "historyId": "49c24282524317239689b0895045467a", "testCaseId": "a6716a60486b7191f398aaa5e300f08b", "fullName": "tests.automationtesting_tests.test_homepage.TestHomePage#test9_homepage_arrivals_add_to_basket_items_coupon", "labels": [{"name": "parentSuite", "value": "tests.automationtesting_tests"}, {"name": "suite", "value": "test_homepage"}, {"name": "subSuite", "value": "TestHomePage"}, {"name": "host", "value": "MTPL-1558.local"}, {"name": "thread", "value": "69733-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.automationtesting_tests.test_homepage"}]}